
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Элементы.ГруппаПериодОстатков.Видимость = Параметры.РежимОстатков;
	//Элементы.ГруппаПериодОборотов.Видимость = НЕ Параметры.РежимОстатков;
	
	ЭтаФорма.Заголовок = "РегистрСведений." + Параметры.ИмяРегистра;
	
	ЗаполнитьИсходныеДанные();
	         	
КонецПроцедуры                       

&НаСервере
Процедура ЗаполнитьИсходныеДанные()
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	Измерения.Очистить();
	Ресурсы.Очистить();
	
	РегистрМетаданные = Метаданные.РегистрыСведений[Параметры.ИмяРегистра];
	
	Для каждого СтрандартныйРеквизит из РегистрМетаданные.СтандартныеРеквизиты Цикл 		
		ТаблицаДанных.Колонки.Добавить(СтрандартныйРеквизит.Имя, СтрандартныйРеквизит.Тип, СтрандартныйРеквизит.Синоним); 		
	КонецЦикла;  
	
	Для каждого Измерение из РегистрМетаданные.Измерения Цикл		
		ТаблицаДанных.Колонки.Добавить(Измерение.Имя, Измерение.Тип, Измерение.Синоним);
		Измерения.Добавить(Измерение.Имя);
	КонецЦикла;
	
	Для каждого Ресурс из РегистрМетаданные.Ресурсы Цикл		
		ТаблицаДанных.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип, Ресурс.Синоним);   		
		Ресурсы.Добавить(Ресурс.Имя)
	КонецЦикла; 		
	
    
	
	СгенерироватьТаблицуФормы(ТаблицаДанных);
	
		Если Параметры.Хранилище <> Неопределено Тогда
		
		ДляЗаполнения = Параметры.Хранилище.Получить();
		
		Для каждого СтрокаВходящихДанных из ДляЗаполнения.ТаблицаДанных Цикл
			НоваяСтрока = ЭтотОбъект.ТаблицаРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВходящихДанных);
		КонецЦикла;                                                                             
			 	   		
	КонецЕсли;   
	
КонецПроцедуры

&НаСервере                                                                   
Процедура СгенерироватьТаблицуФормы(ТаблицаДанных)
	
	МассивТипа = Новый Массив;
    МассивТипа.Добавить(Тип("ТаблицаЗначений"));

    // Добавление ТаблицыЗначений в массив реквизитов
    ОписаниеТипа = Новый ОписаниеТипов(МассивТипа);
    МассивРеквизитовФормы = Новый Массив;
    МассивРеквизитовФормы.Добавить(Новый РеквизитФормы("ТаблицаРегистра", ОписаниеТипа, "", "ТаблицаРегистра"));

	Для Каждого Колонка Из ТаблицаДанных.Колонки Цикл
        МассивРеквизитовФормы.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТаблицаРегистра"));
    КонецЦикла;

    // Удаление - если таблица существует
    ЭлементТаблица = Элементы.Найти("ТаблицаРегистра");
    Если ЭлементТаблица <> Неопределено Тогда
        Элементы.Удалить(ЭлементТаблица);
    Иначе
        ИзменитьРеквизиты(МассивРеквизитовФормы);
    КонецЕсли;

    // Добавление ТаблицыЗначений на форму
    ТаблицаПолейВыбора = Элементы.Добавить("ТаблицаРегистра", Тип("ТаблицаФормы"));
    ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаРегистра";
    ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
    ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет; // Отключение командной панели

    Для Каждого Колонка Из ТаблицаДанных.Колонки Цикл

        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТаблицаРегистра." + Колонка.Имя;
        НовыйЭлемент.Ширина = 10;

	КонецЦикла;
	
	ТаблицаПолейВыбора.УстановитьДействие("Перетаскивание","ТаблицаРегистраПеретаскивание");

КонецПроцедуры

&НаСервере
Процедура Команда1НаСервере()
	
	СтруктураСериализации = Новый Структура();
	СтруктураСериализации.Вставить("Версия", "1");
	СтруктураСериализации.Вставить("ИмяРегистра", Параметры.ИмяРегистра);
	СтруктураСериализации.Вставить("ТаблицаДанных", ЭтотОбъект.ТаблицаРегистра.Выгрузить());
	СтруктураСериализации.Вставить("Ресурсы", Ресурсы.ВыгрузитьЗначения());
	СтруктураСериализации.Вставить("Измерения", Измерения.ВыгрузитьЗначения());
	
	
	Хранилище = Новый ХранилищеЗначения(СтруктураСериализации);
	
КонецПроцедуры     

&НаКлиенте                                 
Процедура Команда1(Команда)
	
	Команда1НаСервере();
	
	ОповеститьОВыборе(Хранилище);
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаРегистраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	
	Чтец(ПараметрыПеретаскивания.Значение);

	
КонецПроцедуры 


Процедура Чтец(ДанныеРегистра)
	
	КЗ = РегистрыСведений[параметры.ИмяРегистра].СоздатьМенеджерЗаписи();
	                            		
	Для каждого КлючРегистра из ДанныеРегистра Цикл
		
		ЗаполнитьЗначенияСвойств(КЗ, КлючРегистра);
		КЗ.Прочитать();
		
		НоваяСтрока = ЭтотОбъект.ТаблицаРегистра.Добавить();
		                        	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КЗ);	
		
	КонецЦикла;
		
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьИзРегистра(Команда)
	
	ПараметрыФормыРегистра = Новый Структура("РежимВыбора, ТолькоПросмотр, МножественныйВыбор", Истина, Истина, Истина);
	
	ОткрытьФорму(СтрШаблон("РегистрСведений.%1.ФормаСписка", Параметры.ИмяРегистра), ПараметрыФормыРегистра, ЭтаФорма, );
	
КонецПроцедуры

