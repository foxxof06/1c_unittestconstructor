
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаПериодОстатков.Видимость = Параметры.РежимОстатков;
	Элементы.ГруппаПериодОборотов.Видимость = НЕ Параметры.РежимОстатков;
	
	РежимОстатков = Параметры.РежимОстатков;
	
	ЭтаФорма.Заголовок = "РегистрНакопления." + Параметры.ИмяРегистра;
	
	ЗаполнитьИсходныеДанные();
	         	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсходныеДанные()
	                                         	
	ТаблицаДанных = Новый ТаблицаЗначений;
	Измерения.Очистить();
	Ресурсы.Очистить();
	
	РегистрМетаданные = Метаданные.РегистрыНакопления[Параметры.ИмяРегистра];
	
	Для каждого Измерение из РегистрМетаданные.Измерения Цикл		
		ТаблицаДанных.Колонки.Добавить(Измерение.Имя, Измерение.Тип, Измерение.Синоним);
		Измерения.Добавить(Измерение.Имя);
	КонецЦикла;
	
	Для каждого Ресурс из РегистрМетаданные.Ресурсы Цикл		
		ТаблицаДанных.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип, Ресурс.Синоним);   		
		Ресурсы.Добавить(Ресурс.Имя)
	КонецЦикла; 		
	                
	
	СгенерироватьТаблицуФормы(ТаблицаДанных);
	
	Если Параметры.Хранилище <> Неопределено Тогда
		
		ДляЗаполнения = Параметры.Хранилище.Получить();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДляЗаполнения, , "Ресурсы, Измерения");
		
		Для каждого СтрокаВходящихДанных из ДляЗаполнения.ТаблицаДанных Цикл
			НоваяСтрока = ЭтотОбъект.ТаблицаРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВходящихДанных);
		КонецЦикла;  
					 	   		
	КонецЕсли;   
	
КонецПроцедуры

&НаСервере                                                                   
Процедура СгенерироватьТаблицуФормы(ТаблицаДанных)
	
	МассивТипа = Новый Массив;
    МассивТипа.Добавить(Тип("ТаблицаЗначений"));

    // Добавление ТаблицыЗначений в массив реквизитов
    ОписаниеТипа = Новый ОписаниеТипов(МассивТипа);
    МассивРеквизитовФормы = Новый Массив;
    МассивРеквизитовФормы.Добавить(Новый РеквизитФормы("ТаблицаРегистра", ОписаниеТипа, "", "ТаблицаРегистра"));

	Для Каждого Колонка Из ТаблицаДанных.Колонки Цикл
        МассивРеквизитовФормы.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТаблицаРегистра"));
    КонецЦикла;

    // Удаление - если таблица существует
    ЭлементТаблица = Элементы.Найти("ТаблицаРегистра");
    Если ЭлементТаблица <> Неопределено Тогда
        Элементы.Удалить(ЭлементТаблица);
    Иначе
        ИзменитьРеквизиты(МассивРеквизитовФормы);
    КонецЕсли;

    // Добавление ТаблицыЗначений на форму
    ТаблицаПолейВыбора = Элементы.Добавить("ТаблицаРегистра", Тип("ТаблицаФормы"));
    ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаРегистра";
    ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
    ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет; // Отключение командной панели

	Для Каждого Колонка Из ТаблицаДанных.Колонки Цикл
		
		Если Колонка.Имя = "Портфель" Тогда
			Продолжить;
		КонецЕсли;
		

        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаПолейВыбора);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТаблицаРегистра." + Колонка.Имя;
        НовыйЭлемент.Ширина = 10;

	КонецЦикла;
	
	ТаблицаПолейВыбора.УстановитьДействие("Перетаскивание","ТаблицаРегистраПеретаскивание");
	
	
	////Добавление команды формы
	//Команда = Команды.Добавить(
	//	"ЗаполнитьСтроку"); //Имя команды
	//Команда.Заголовок = "ЗаполнитьСтроку";
	//Команда.Действие  = "ЗаполнитьСтроку"; //Имя связанной процедуры
	

	//Добавление кнопки формы
	КнопкаФормы = Элементы.Добавить(
		"ЗаполнитьСтроку", //Имя кнопки
		Тип("КнопкаФормы"),             //Тип, всегда КнопкаФормы
		Элементы.ТаблицаРегистра.КонтекстноеМеню);                      //Контейнер для кнопки (Форма, Группа, Командная панель)
		
	КнопкаФормы.ИмяКоманды = "ЗаполнитьСтроку"; //Связь с командой по имени
	
	//Возможные варианты вида кнопки:
	//	-Гиперссылка
	//	-ГиперссылкаКоманднойПанели
	//	-КнопкаКоманднойПанели
	//	-ОбычнаяКнопка
	//Если контейнер для формы - командная панель
	//то вид кнопки должен быть КнопкаКоманднойПанели
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	
	//Полный перечень свойств кнопки формы в синтакс-помощнике
	//	Интерфейс (управляемый)->Кнопка формы

КонецПроцедуры

&НаСервере
Процедура Команда1НаСервере()
	
	СтруктураСериализации = Новый Структура();
	СтруктураСериализации.Вставить("Версия", "1");
	СтруктураСериализации.Вставить("ИмяРегистра", Параметры.ИмяРегистра);
	СтруктураСериализации.Вставить("ТаблицаДанных", ЭтотОбъект.ТаблицаРегистра.Выгрузить());
	СтруктураСериализации.Вставить("Период", Период);
	СтруктураСериализации.Вставить("ПериодОборотов", ПериодОборотов);
	СтруктураСериализации.Вставить("Ресурсы", Ресурсы.ВыгрузитьЗначения());
	СтруктураСериализации.Вставить("Измерения", Измерения.ВыгрузитьЗначения());
	СтруктураСериализации.Вставить("Портфель", Портфель);
	                                                                      	
	Хранилище = Новый ХранилищеЗначения(СтруктураСериализации);
	                     
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	Команда1НаСервере();
	
	ОповеститьОВыборе(Хранилище);
	
КонецПроцедуры

&НаСервере
Функция ДанныеДляЗаполнения(ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	
	Если РежимОстатков Тогда
		ПостфиксРесурса = "Остаток";
		ИмяВиртуальнойТаблицы = "Остатки";
	Иначе
		ПостфиксРесурса = "Оборот";		
		ИмяВиртуальнойТаблицы = "Обороты";
	КонецЕсли;
	
	МассивСтрокРесурсов = Новый Массив;
	
	ШаблонСтрокаЗапросаРесур = "РегистрДанных.%1%2 КАК %1";
	
	ДанныеЗаполнения = Новый Структура();
	
	Для Каждого Ресурс Из Ресурсы Цикл
		
		МассивСтрокРесурсов.Добавить(
			СтрШаблон(ШаблонСтрокаЗапросаРесур, Ресурс.Значение, ПостфиксРесурса));
			
		ДанныеЗаполнения.Вставить(Ресурс.Значение);
	КонецЦикла;
		
	МассивСтрокУсловия = Новый Массив;
	
	Для Каждого КлючЗначение Из ПараметрыЗаполнения Цикл
		
		 МассивСтрокУсловия.Добавить(
		 	СтрШаблон("%1 = &%1", КлючЗначение.Ключ));
			
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		
	КонецЦикла;
	
	СтрокаУсловия = СтрСоединить(МассивСтрокУсловия, " И ");
	СтрокаРесурсов = СтрСоединить(МассивСтрокРесурсов, ", " + Символы.ПС);
	
	
	
	
	Если РежимОстатков Тогда 
		
		СтрокаРегистра = СтрШаблон("РегистрНакопления.%1.%2(&Период, %3) КАК РегистрДанных",
		Параметры.ИмяРегистра, ИмяВиртуальнойТаблицы, СтрокаУсловия);
		
		Запрос.УстановитьПараметр("Период", Период);
		
	Иначе
		
		СтрокаРегистра = СтрШаблон("РегистрНакопления.%1.%2(&НачалоПериода,&КонецПериода, ,%3) КАК РегистрДанных",
		Параметры.ИмяРегистра, ИмяВиртуальнойТаблицы, СтрокаУсловия);
		
		Запрос.УстановитьПараметр("НачалоПериода", ПериодОборотов.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериода", ПериодОборотов.ДатаОкончания);
		
	КонецЕсли;
	              	
	
	Запрос.Текст = 
		"Выбрать " + СтрокаРесурсов + " ИЗ " + СтрокаРегистра;  
	        
				
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		
		Если Выборка.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка); 			
		
		КонецЕсли;
		
		
		Возврат ДанныеЗаполнения;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСтроку(Команда)		
	
	ТекущиеДанные = Элементы.ТаблицаРегистра.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;		
	КонецЕсли;       
	
	
	ПараметрыЗаполнения = Новый Структура();
	
	ПараметрыЗаполнения.Вставить("Портфель", Портфель);
	                 
	Для Каждого Измерение Из Измерения Цикл
		
		ЗначениеИзмерения = ТекущиеДанные[Измерение.Значение];
		
		Если ЗначениеЗаполнено(ЗначениеИзмерения) Тогда
			
			ПараметрыЗаполнения.Вставить(Измерение.Значение, ЗначениеИзмерения);
			
		КонецЕсли;
				
	КонецЦикла;          		             
	
	ДанныеДляЗаполнения = ДанныеДляЗаполнения(ПараметрыЗаполнения);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеДляЗаполнения);
	
КонецПроцедуры


