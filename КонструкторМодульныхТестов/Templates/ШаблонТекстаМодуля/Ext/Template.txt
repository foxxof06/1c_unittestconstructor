#Область Переменные

Перем КонтекстЯдра;
Перем Ожидаем;
Перем СериализаторMXL;
Перем СтруктураВходящихДанных;
Перем РегистрУПС;
Перем РаботаСРегистрами;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	СериализаторMXL = КонтекстЯдра.Плагин("СериализаторMXL");
	
	РегистрУПС = КонтекстЯдра.Плагин("РегистрБухгалтерииУПС");	
	РаботаСРегистрами = КонтекстЯдра.Плагин("РаботаСРегистрами");

КонецПроцедуры

Функция ЗаполнитьНаборТестов(НаборТестов) Экспорт

###ШАБЛОН_НАБОРЫ_ТЕСТОВ###
	
КонецФункции  

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Тесты

###ШАБЛОН_ПРОЦЕДУРЫ_ТЕСТОВ###

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

###ШАБЛОН_СЛУЖЕБНЫЕПРОЦЕДУРЫИФУНКЦИИ_ТЕСТОВ###

Процедура ЗаполнитьСтруктуруВходящихДанныхИзМакета(ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураВходящихДанных = СериализаторMXL.СоздатьДанныеПоТабличномуДокументу(ПолучитьМакет(ИмяМакета));
		
КонецПроцедуры

Процедура ВыполнитьПроведениеДокумента(ДокументОбъект, ФормироватьПроводки = Ложь)
	
	Если ФормироватьПроводки Тогда	
		ДокументОбъект.ДополнительныеСвойства.Вставить("ВыполнитьПроведениеПоБУ", Истина);
	КонецЕсли;
		
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение); 
	
КонецПроцедуры

Функция ПараметрыСценария(ИмяМакетаСценария)
	
	Параметры = Новый Структура("scenario", ИмяМакетаСценария);
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Параметры);

	Возврат МассивПараметров;
	
КонецФункции

#КонецОбласти

